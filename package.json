{
  "name": "obi",
  "displayName": "Object Builder for IBM i (OBI)",
  "description": "Automated build tool for IBM i",
  "publisher": "andreas-prouza",
  "version": "0.2.12",
  "icon": "asserts/img/ext/logo.png",
  "keywords": [
    "ibm i",
    "ibmi",
    "iseries",
    "as400",
    "rpgle",
    "ile",
    "build"
  ],
  "author": {
    "name": "Andreas Prouza",
    "url": "https://www.prouza.at"
  },
  "license": "MIT",
  "repository": {
    "url": "https://github.com/andreas-prouza/obi-extension"
  },
  "engines": {
    "vscode": "^1.66.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "obi.show_changes",
        "title": "%obi.show_changes%",
        "icon": "$(telescope)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.run_build",
        "title": "%obi.run_build%",
        "icon": "$(play)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.source-filter.update",
        "title": "%obi.source-filter.update%",
        "icon": "$(refresh)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.source-filter.add",
        "title": "%obi.source-filter.add%",
        "icon": "$(add)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.get-remote-compiled-object-list",
        "title": "%obi.get-remote-compiled-object-list%",
        "icon": "$(arrow-circle-down)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.reset-compiled-object-list",
        "title": "%obi.reset-compiled-object-list%",
        "icon": "$(extensions)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.get-remote-source-list",
        "title": "%obi.get-remote-source-list%",
        "icon": "$(arrow-down)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.check-remote-sources",
        "title": "%obi.check-remote-sources%",
        "icon": "$(tasklist)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.controller.config",
        "title": "%obi.controller.config%",
        "icon": "$(settings-gear)",
        "when": "obi.contains_obi_project"
      },
      {
        "command": "obi.transfer-all",
        "title": "%obi.transfer-all%",
        "icon": "$(cloud-upload)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.source-filter.show-view",
        "title": "%obi.source-filter.show-view%",
        "icon": "$(preview)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.source-filter.edit-config",
        "title": "%obi.source-filter.edit-config%",
        "icon": "$(settings-gear)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.source-filter.delete-config",
        "title": "%obi.source-filter.delete-config%",
        "icon": "$(trash)",
        "when": "obi.contains_obi_project && obi.valid-config"
      },
      {
        "command": "obi.source-filter.maintain-source-infos",
        "title": "%obi.source-filter.maintain-source-infos%",
        "icon": "$(settings-gear)",
        "when": "obi.contains_obi_project && obi.valid-config"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "obi.source-filter.add",
          "when": "obi.contains_obi_project && obi.valid-config && view == obi.source-filter",
          "group": "navigation@1"
        },
        {
          "command": "obi.source-filter.maintain-source-infos",
          "when": "obi.contains_obi_project && obi.valid-config && view == obi.source-filter",
          "group": "navigation@2"
        },
        {
          "command": "obi.source-filter.update",
          "when": "obi.contains_obi_project && obi.valid-config && view == obi.source-filter",
          "group": "navigation@5"
        },
        {
          "command": "obi.run_build",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@0"
        },
        {
          "command": "obi.show_changes",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@1"
        },
        {
          "command": "obi.get-remote-source-list",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@2"
        },
        {
          "command": "obi.get-remote-compiled-object-list",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@3"
        },
        {
          "command": "obi.reset-compiled-object-list",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@4"
        },
        {
          "command": "obi.check-remote-sources",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@5"
        },
        {
          "command": "obi.transfer-all",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@6"
        },
        {
          "command": "obi.controller.config",
          "when": "obi.contains_obi_project && (view == obi.controller || (!obi.valid-config && view == obi-config-invalid))",
          "group": "navigation@7"
        }
      ],
      "view/item/context": [
        {
          "command": "obi.source-filter.show-view",
          "when": "obi.contains_obi_project && view == obi.source-filter && viewItem == source-list",
          "group": "inline@0"
        },
        {
          "command": "obi.source-filter.edit-config",
          "when": "obi.contains_obi_project && view == obi.source-filter && viewItem == source-list",
          "group": "inline@2"
        },
        {
          "command": "obi.source-filter.delete-config",
          "when": "obi.contains_obi_project && view == obi.source-filter && viewItem == source-list",
          "group": "inline@3"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "obi-bar",
          "title": "Object Builder for i",
          "icon": "$(code)"
        }
      ]
    },
    "views": {
      "obi-bar": [
        {
          "type": "webview",
          "id": "obi.controller",
          "name": "OBI",
          "when": "obi.contains_obi_project && obi.valid-config"
        },
        {
          "type": "tree",
          "id": "obi.source-filter",
          "name": "%Source filters%",
          "when": "obi.contains_obi_project && obi.valid-config"
        },
        {
          "type": "webview",
          "id": "obi-welcome",
          "name": "%Welcome%",
          "when": "obi.contains_obi_project == false"
        },
        {
          "type": "webview",
          "id": "obi-config-invalid",
          "name": "%Invalid config%",
          "when": "obi.contains_obi_project && !obi.valid-config"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "node ./esbuild.js",
    "package": "NODE_ENV=production node ./esbuild.js",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@theia/core": "latest",
    "@theia/plugin-ext-vscode": "latest",
    "@theia/vsx-registry": "latest",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.66.0",
    "@types/vscode-webview": "^1.57.5",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.16.17",
    "eslint": "^8.57.0"
  },
  "theia": {
    "target": "browser"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "deepmerge": "^4.3.1",
    "fs-extra": "^11.2.0",
    "hasha": "^6.0.0",
    "node-ssh": "^13.1.0",
    "nunjucks": "^3.2.4",
    "ovsx": "^0.9.4",
    "smol-toml": "^1.3.0",
    "winston": "^3.1.0"
  }
}
