/* override file, after choices.min.css */
.choices {
  width: auto !important;           /* let it expand */
  min-width: 100% !important;       /* at least as wide as table cell */
}

.choices__list--dropdown {
  width: max-content !important;    /* expand dropdown to fit longest option */
  white-space: nowrap !important;   /* prevent wrapping */
}

body.vscode-dark .choices,
body.vscode-dark .choices__inner,
body.vscode-dark .choices__list--dropdown,
body.vscode-dark .choices__input,
body.vscode-dark .choices__list--dropdown .choices__input,
body.vscode-dark .choices__list--dropdown .choices__item--selectable.is-highlighted {
    background: var(--vscode-editor-background) !important;
    color: var(--vscode-editor-foreground) !important;
    border-color: var(--vscode-input-border) !important;
}

/* TomSelect */

body.vscode-dark .ts-wrapper,
body.vscode-dark .ts-control,
body.vscode-dark .ts-dropdown {
  background: var(--vscode-editor-background) !important;
  color: var(--vscode-editor-foreground) !important;
  border-color: var(--vscode-input-border) !important;
}

body.vscode-dark .ts-dropdown .ts-option:hover,
body.vscode-dark .ts-dropdown .ts-option.ts-active {
  background: var(--vscode-list-activeSelectionBackground) !important;
  color: var(--vscode-list-activeSelectionForeground) !important;
}


/* text the user types into the filter box */
body.vscode-dark .ts-control input {
    color: var(--vscode-editor-foreground) !important;
}

/* also ensure the control background is dark */
body.vscode-dark .ts-control {
    background: var(--vscode-editor-background) !important;
    color: var(--vscode-editor-foreground) !important;
    border-color: var(--vscode-input-border) !important;
}

/* dropdown list background + text */
body.vscode-dark .ts-dropdown {
    background: var(--vscode-editor-background) !important;
    color: var(--vscode-editor-foreground) !important;
    border-color: var(--vscode-input-border) !important;
}

/* 1. Fix the width of the entire control (wrapper) to 350px. */
/* This prevents it from shrinking on blur. */
.ts-wrapper {
    width: 380px !important;
}

/* 2. Fix the width of the dropdown menu to 350px. */
/* This ensures the dropdown matches the control's width when open. */
.ts-dropdown {
    width: 380px !important;
    /* Optional: Remove previous dynamic sizing rules */
    max-content: none !important; 
    min-width: 0 !important; 
    white-space: normal !important; /* Allow long text to wrap if it exceeds 350px */
}

/* 3. Ensure the internal input field is constrained within the 350px control. */
/* This prevents the search cursor area from over-expanding. */
.ts-control {
    box-sizing: border-box !important;
    display: flex !important;
    flex-wrap: nowrap !important; 
    align-items: center !important;
    padding: 0 !important;
    /* Increase vertical padding to make the control taller */
    padding-top: 8px !important;    /* Increase this value to make it taller */
    padding-bottom: 8px !important; /* Increase this value to make it taller */
}

.ts-control > input {
    box-sizing: border-box !important;
    flex-grow: 1 !important; 
    min-width: 0 !important; 
    /* The 350px width of the parent (.ts-wrapper) constrains the input */
    max-width: 100% !important; 
    padding: 0 4px; /* Adjust padding as needed */
}